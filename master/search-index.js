var searchIndex = {};
searchIndex["gurobi"] = {"doc":"This crate provides primitive Rust APIs for Gurobi Optimizer.","items":[[3,"Env","gurobi","Gurobi environment object",null,null],[3,"Model","","Gurobi model object associated with certain environment.",null,null],[3,"Var","","Proxy object of a variables",null,null],[3,"Constr","","Proxy object of a linear constraint",null,null],[3,"QConstr","","Proxy object of a quadratic constraint",null,null],[3,"SOS","","Proxy object of a Special Order Set (SOS) constraint",null,null],[3,"LinExpr","","Linear expression of variables",null,null],[3,"QuadExpr","","Quadratic expression of variables",null,null],[3,"Context","","",null,null],[4,"Error","","The error type for operations in Gurobi Rust API",null,null],[13,"FromAPI","","An exception returned from Gurobi C API",0,null],[13,"NulError","","See https://doc.rust-lang.org/std/ffi/struct.NulError.html",0,null],[13,"InconsitentDims","","Inconsistent argument dimensions",0,null],[13,"StringConversion","","String conversion error",0,null],[4,"VarType","","Type for new variable",null,null],[13,"Binary","","",1,null],[13,"Continuous","","",1,null],[13,"Integer","","",1,null],[4,"ConstrSense","","Sense for new linear/quadratic constraint",null,null],[13,"Equal","","",2,null],[13,"Greater","","",2,null],[13,"Less","","",2,null],[4,"ModelSense","","Sense of new objective function",null,null],[13,"Minimize","","",3,null],[13,"Maximize","","",3,null],[4,"SOSType","","Type of new SOS constraint",null,null],[13,"SOSType1","","",4,null],[13,"SOSType2","","",4,null],[4,"Status","","Status of a model",null,null],[13,"Loaded","","",5,null],[13,"Optimal","","",5,null],[13,"Infeasible","","",5,null],[13,"InfOrUnbd","","",5,null],[13,"Unbounded","","",5,null],[13,"CutOff","","",5,null],[13,"IterationLimit","","",5,null],[13,"NodeLimit","","",5,null],[13,"TimeLimit","","",5,null],[13,"SolutionLimit","","",5,null],[13,"Interrupted","","",5,null],[13,"Numeric","","",5,null],[13,"SubOptimal","","",5,null],[13,"InProgress","","",5,null],[4,"RelaxType","","Type of cost function at feasibility relaxation",null,null],[13,"Linear","","The weighted magnitude of bounds and constraint violations\n(`penalty(s_i) = w_i s_i`)",6,null],[13,"Quadratic","","The weighted square of magnitude of bounds and constraint violations\n(`penalty(s_i) = w_i s_i^2`)",6,null],[13,"Cardinality","","The weighted count of bounds and constraint violations\n(`penalty(s_i) = w_i * [s_i &gt; 0]`)",6,null],[5,"version","","Returns the version number of Gurobi",null,null],[11,"clone","gurobi::attrib::exports","",7,null],[11,"fmt","","",7,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"from","std::ffi::c_str","",14,{"inputs":[{"name":"intparam"}],"output":{"name":"cstring"}}],[11,"from","","",14,{"inputs":[{"name":"doubleparam"}],"output":{"name":"cstring"}}],[11,"from","","",14,{"inputs":[{"name":"stringparam"}],"output":{"name":"cstring"}}],[11,"from","","",14,{"inputs":[{"name":"intattr"}],"output":{"name":"cstring"}}],[11,"from","","",14,{"inputs":[{"name":"charattr"}],"output":{"name":"cstring"}}],[11,"from","","",14,{"inputs":[{"name":"doubleattr"}],"output":{"name":"cstring"}}],[11,"from","","",14,{"inputs":[{"name":"stringattr"}],"output":{"name":"cstring"}}],[11,"new","gurobi","Create an environment with log file",15,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"client","","Create a client environment on a computer server with log file",15,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"i32"},{"name":"f64"}],"output":{"name":"result"}}],[11,"new_model","","Create an empty model object associted with the environment",15,null],[11,"read_model","","Read a model from a file",15,null],[11,"get","","Query the value of a parameter",15,null],[11,"set","","Set the value of a parameter",15,null],[11,"read_params","","Import a set of parameter values from a file",15,null],[11,"write_params","","Write the set of parameter values to a file",15,null],[11,"message","","Insert a message into log file.",15,null],[11,"drop","","",15,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"into","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"into","","",2,null],[11,"fmt","","",3,null],[11,"into","","",3,null],[11,"fmt","","",4,null],[11,"into","","",4,null],[11,"eq","","",5,null],[11,"fmt","","",5,null],[11,"from","","",5,{"inputs":[{"name":"i32"}],"output":{"name":"status"}}],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"new","","Create an empty linear expression.",20,{"inputs":[],"output":{"name":"self"}}],[11,"add_term","","Add a linear term into the expression.",20,null],[11,"add_constant","","Add a constant into the expression.",20,null],[11,"get_value","","Get actual value of the expression.",20,null],[11,"into","","",20,null],[11,"clone","","",21,null],[11,"new","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"add_term","","Add a linear term into the expression.",21,null],[11,"add_qterm","","Add a quadratic term into the expression.",21,null],[11,"add_constant","","Add a constant into the expression.",21,null],[11,"get_value","","Get actual value of the expression.",21,null],[11,"mul","","",16,null],[11,"mul","","",21,null],[11,"add","","",20,null],[11,"sub","","",20,null],[11,"add","","",20,null],[11,"sub","","",20,null],[11,"add","","",21,null],[11,"sub","","",21,null],[11,"add","","",21,null],[11,"sub","","",21,null],[11,"add","","",20,null],[11,"fmt","","",6,null],[11,"into","","",6,null],[11,"get_loc","","",22,null],[11,"get_model","","",22,null],[11,"get","","",22,null],[11,"get_array","","",22,null],[11,"add_cut","","Add a new cutting plane to the MIP model.",22,null],[11,"add_lazy","","Add a new lazy constraint to the MIP model.",22,null],[11,"set_solution","","Provide a new feasible solution for a MIP model.",22,null],[11,"terminate","","terminate the optimization.",22,null],[11,"new","","create an empty model which associated with certain environment.",23,null],[11,"copy","","create a copy of the model",23,null],[11,"fixed","","Create an fixed model associated with the model.",23,null],[11,"relax","","Create an relaxation of the model (undocumented).",23,null],[11,"presolve","","Perform presolve on the model.",23,null],[11,"feasibility","","Create a feasibility model (undocumented).",23,null],[11,"update","","Apply all modification of the model to process",23,null],[11,"optimize","","Optimize the model synchronously",23,null],[11,"optimize_async","","Optimize the model asynchronously",23,null],[11,"sync","","Wait for a optimization called asynchronously.",23,null],[11,"compute_iis","","Compute an Irreducible Inconsistent Subsystem (IIS) of the model.",23,null],[11,"terminate","","Send a request to the model to terminate the current optimization process.",23,null],[11,"reset","","Reset the model to an unsolved state.",23,null],[11,"tune","","Perform an automated search for parameter settings that improve performance on the model.\nSee also references [on official\nmanual](https://www.gurobi.com/documentation/6.5/refman/parameter_tuning_tool.html#sec:Tuning).",23,null],[11,"get_tune_result","","Prepare to retrieve the results of `tune()`.\nSee also references [on official\nmanual](https://www.gurobi.com/documentation/6.5/refman/parameter_tuning_tool.html#sec:Tuning).",23,null],[11,"get_concurrent_env","","Create/retrieve a concurrent environment for the model",23,null],[11,"discard_concurrent_envs","","Discard all concurrent environments for the model.",23,null],[11,"message","","Insert a message into log file.",23,null],[11,"read","","Import optimization data of the model from a file.",23,null],[11,"write","","Export optimization data of the model to a file.",23,null],[11,"add_var","","add a decision variable to the model.",23,null],[11,"add_vars","","add decision variables to the model.",23,null],[11,"add_constr","","add a linear constraint to the model.",23,null],[11,"add_constrs","","add linear constraints to the model.",23,null],[11,"add_qconstr","","add a quadratic constraint to the model.",23,null],[11,"add_sos","","add Special Order Set (SOS) constraint to the model.",23,null],[11,"set_objective","","Set the objective function of the model.",23,null],[11,"get","","Query the value of attributes which associated with variable/constraints.",23,null],[11,"set","","Set the value of attributes which associated with variable/constraints.",23,null],[11,"get_values","","Query the value of attributes which associated with variable/constraints.",23,null],[11,"set_values","","Set the value of attributes which associated with variable/constraints.",23,null],[11,"feas_relax","","Modify the model to create a feasibility relaxation.",23,null],[11,"set_pwl_obj","","Set a piecewise-linear objective function of a certain variable in the model.",23,null],[11,"status","","Retrieve the status of the model.",23,null],[11,"get_vars","","Retrieve an iterator of the variables in the model.",23,null],[11,"get_constrs","","Retrieve an iterator of the linear constraints in the model.",23,null],[11,"get_qconstrs","","Retrieve an iterator of the quadratic constraints in the model.",23,null],[11,"get_sos","","Retrieve an iterator of the special order set (SOS) constraints in the model.",23,null],[11,"remove_var","","Remove a variable from the model.",23,null],[11,"remove_constr","","Remove a linear constraint from the model.",23,null],[11,"remove_qconstr","","Remove a quadratic constraint from the model.",23,null],[11,"remove_sos","","Remove a special order set (SOS) cnstraint from the model.",23,null],[11,"set_callback","","",23,null],[11,"reset_callback","","",23,null],[11,"get_coeff","","Retrieve a single constant matrix coefficient of the model.",23,null],[11,"set_coeff","","Change a single constant matrix coefficient of the model.",23,null],[11,"set_coeffs","","Change a set of constant matrix coefficients of the model.",23,null],[11,"drop","","",23,null],[0,"param","","Defines the name of parameters",null,null],[4,"IntParam","gurobi::param","",null,null],[13,"SolutionLimit","","",7,null],[13,"Method","","",7,null],[13,"ScaleFlag","","",7,null],[13,"SimplexPricing","","",7,null],[13,"Quad","","",7,null],[13,"NormAdjust","","",7,null],[13,"Sifting","","",7,null],[13,"SiftMethod","","",7,null],[13,"SubMIPNodes","","",7,null],[13,"VarBranch","","",7,null],[13,"Cuts","","",7,null],[13,"CliqueCuts","","",7,null],[13,"CoverCuts","","",7,null],[13,"FlowCoverCuts","","",7,null],[13,"FlowPathCuts","","",7,null],[13,"GUBCoverCuts","","",7,null],[13,"ImpliedCuts","","",7,null],[13,"MIPSepCuts","","",7,null],[13,"MIRCuts","","",7,null],[13,"ModKCuts","","",7,null],[13,"ZeroHalfCuts","","",7,null],[13,"NetworkCuts","","",7,null],[13,"SubMIPCuts","","",7,null],[13,"CutAggPasses","","",7,null],[13,"CutPasses","","",7,null],[13,"GomoryPasses","","",7,null],[13,"NodeMethod","","",7,null],[13,"Presolve","","",7,null],[13,"Aggregate","","",7,null],[13,"IISMethod","","",7,null],[13,"PreCrush","","",7,null],[13,"PreDepRow","","",7,null],[13,"PrePasses","","",7,null],[13,"DisplayInterval","","",7,null],[13,"OutputFlag","","",7,null],[13,"Threads","","",7,null],[13,"BarIterLimit","","",7,null],[13,"Crossover","","",7,null],[13,"CrossoverBasis","","",7,null],[13,"BarCorrectors","","",7,null],[13,"BarOrder","","",7,null],[13,"PumpPasses","","",7,null],[13,"RINS","","",7,null],[13,"Symmetry","","",7,null],[13,"MIPFocus","","",7,null],[13,"NumericFocus","","",7,null],[13,"AggFill","","",7,null],[13,"PreDual","","",7,null],[13,"SolutionNumber","","",7,null],[13,"MinRelNodes","","",7,null],[13,"ZeroObjNodes","","",7,null],[13,"BranchDir","","",7,null],[13,"InfUnbdInfo","","",7,null],[13,"DualReductions","","",7,null],[13,"BarHomogeneous","","",7,null],[13,"PreQLinearize","","",7,null],[13,"MIQCPMethod","","",7,null],[13,"QCPDual","","",7,null],[13,"LogToConsole","","",7,null],[13,"PreSparsify","","",7,null],[13,"PreMIQCPForm","","",7,null],[13,"Seed","","",7,null],[13,"ConcurrentMIP","","",7,null],[13,"ConcurrentJobs","","",7,null],[13,"DistributedMIPJobs","","",7,null],[13,"LazyConstraints","","",7,null],[13,"TuneResults","","",7,null],[13,"TuneTrials","","",7,null],[13,"TuneOutput","","",7,null],[13,"TuneJobs","","",7,null],[13,"Disconnected","","",7,null],[13,"NoRelHeuristic","","",7,null],[13,"UpdateMode","","",7,null],[13,"WorkerPort","","",7,null],[13,"Record","","",7,null],[4,"DoubleParam","","",null,null],[13,"Cutoff","","",8,null],[13,"IterationLimit","","",8,null],[13,"NodeLimit","","",8,null],[13,"TimeLimit","","",8,null],[13,"FeasibilityTol","","",8,null],[13,"IntFeasTol","","",8,null],[13,"MarkowitzTol","","",8,null],[13,"MIPGap","","",8,null],[13,"MIPGapAbs","","",8,null],[13,"OptimalityTol","","",8,null],[13,"PerturbValue","","",8,null],[13,"Heuristics","","",8,null],[13,"ObjScale","","",8,null],[13,"NodefileStart","","",8,null],[13,"BarConvTol","","",8,null],[13,"BarQCPConvTol","","",8,null],[13,"PSDTol","","",8,null],[13,"ImproveStartGap","","",8,null],[13,"ImproveStartNodes","","",8,null],[13,"ImproveStartTime","","",8,null],[13,"FeasRelaxBigM","","",8,null],[13,"TuneTimeLimit","","",8,null],[13,"PreSOS1BigM","","",8,null],[13,"PreSOS2BigM","","",8,null],[4,"StringParam","","",null,null],[13,"LogFile","","",9,null],[13,"NodefileDir","","",9,null],[13,"ResultFile","","",9,null],[13,"WorkerPool","","",9,null],[13,"WorkerPassword","","",9,null],[13,"Dummy","","",9,null],[0,"attr","gurobi","Defines the name of attributes",null,null],[4,"IntAttr","gurobi::attr","",null,null],[13,"NumConstrs","","",10,null],[13,"NumVars","","",10,null],[13,"NumSOS","","",10,null],[13,"NumQConstrs","","",10,null],[13,"NumNZs","","",10,null],[13,"NumQNZs","","",10,null],[13,"NumQCNZs","","",10,null],[13,"NumIntVars","","",10,null],[13,"NumBinVars","","",10,null],[13,"NumPWLObjVars","","",10,null],[13,"ModelSense","","",10,null],[13,"IsMIP","","",10,null],[13,"IsQP","","",10,null],[13,"IsQCP","","",10,null],[13,"Status","","",10,null],[13,"SolCount","","",10,null],[13,"BarIterCount","","",10,null],[13,"VBasis","","",10,null],[13,"CBasis","","",10,null],[13,"PWLObjCvx","","",10,null],[13,"BranchPriority","","",10,null],[13,"VarPreStat","","",10,null],[13,"BoundVioIndex","","",10,null],[13,"BoundSVioIndex","","",10,null],[13,"ConstrVioIndex","","",10,null],[13,"ConstrSVioIndex","","",10,null],[13,"ConstrResidualIndex","","",10,null],[13,"ConstrSResidualIndex","","",10,null],[13,"DualVioIndex","","",10,null],[13,"DualSVioIndex","","",10,null],[13,"DualResidualIndex","","",10,null],[13,"DualSResidualIndex","","",10,null],[13,"ComplVioIndex","","",10,null],[13,"IntVioIndex","","",10,null],[13,"IISMinimal","","",10,null],[13,"IISLB","","",10,null],[13,"IISUB","","",10,null],[13,"IISConstr","","",10,null],[13,"IISSOS","","",10,null],[13,"IISQConstr","","",10,null],[13,"TuneResultCount","","",10,null],[13,"Lazy","","",10,null],[13,"VarHintPri","","",10,null],[4,"DoubleAttr","","",null,null],[13,"Runtime","","",12,null],[13,"ObjCon","","",12,null],[13,"LB","","",12,null],[13,"UB","","",12,null],[13,"Obj","","",12,null],[13,"Start","","",12,null],[13,"PreFixVal","","",12,null],[13,"RHS","","",12,null],[13,"QCRHS","","",12,null],[13,"MaxCoeff","","",12,null],[13,"MinCoeff","","",12,null],[13,"MaxBound","","",12,null],[13,"MinBound","","",12,null],[13,"MaxObjCoeff","","",12,null],[13,"MinObjCoeff","","",12,null],[13,"MaxRHS","","",12,null],[13,"MinRHS","","",12,null],[13,"ObjVal","","",12,null],[13,"ObjBound","","",12,null],[13,"ObjBoundC","","",12,null],[13,"MIPGap","","",12,null],[13,"IterCount","","",12,null],[13,"NodeCount","","",12,null],[13,"X","","",12,null],[13,"RC","","",12,null],[13,"Pi","","",12,null],[13,"QCPi","","",12,null],[13,"Slack","","",12,null],[13,"QCSlack","","",12,null],[13,"BoundVio","","",12,null],[13,"BoundSVio","","",12,null],[13,"BoundVioSum","","",12,null],[13,"BoundSVioSum","","",12,null],[13,"ConstrVio","","",12,null],[13,"ConstrSVio","","",12,null],[13,"ConstrVioSum","","",12,null],[13,"ConstrSVioSum","","",12,null],[13,"ConstrResidual","","",12,null],[13,"ConstrSResidual","","",12,null],[13,"ConstrResidualSum","","",12,null],[13,"ConstrSResidualSum","","",12,null],[13,"DualVio","","",12,null],[13,"DualSVio","","",12,null],[13,"DualVioSum","","",12,null],[13,"DualSVioSum","","",12,null],[13,"DualResidual","","",12,null],[13,"DualSResidual","","",12,null],[13,"DualResidualSum","","",12,null],[13,"DualSResidualSum","","",12,null],[13,"ComplVio","","",12,null],[13,"ComplVioSum","","",12,null],[13,"IntVio","","",12,null],[13,"IntVioSum","","",12,null],[13,"Kappa","","",12,null],[13,"KappaExact","","",12,null],[13,"SAObjLow","","",12,null],[13,"SAObjUp","","",12,null],[13,"SALBLow","","",12,null],[13,"SALBUp","","",12,null],[13,"SARHSLow","","",12,null],[13,"SAUBLow","","",12,null],[13,"SAUBUp","","",12,null],[13,"SARHSUp","","",12,null],[13,"Xn","","",12,null],[13,"FarkasProof","","",12,null],[13,"FarkasDual","","",12,null],[13,"UnbdRay","","",12,null],[13,"PStart","","",12,null],[13,"DStart","","",12,null],[13,"BarX","","",12,null],[13,"VarHintVal","","",12,null],[4,"CharAttr","","",null,null],[13,"VType","","",11,null],[13,"Sense","","",11,null],[13,"QCSense","","",11,null],[4,"StringAttr","","",null,null],[13,"ModelName","","",13,null],[13,"VarName","","",13,null],[13,"ConstrName","","",13,null],[13,"QCName","","",13,null],[0,"callback","gurobi","",null,null],[4,"Where","gurobi::callback","",null,null],[13,"Polling","","",24,null],[13,"PreSolve","","",24,null],[13,"Simplex","","",24,null],[13,"MIP","","",24,null],[13,"MIPSol","","",24,null],[13,"MIPNode","","",24,null],[13,"Message","","",24,null],[13,"Barrier","","",24,null],[4,"WhatInt","","",null,null],[13,"PreColDel","","",25,null],[13,"PreRowDel","","",25,null],[13,"PreSenChg","","",25,null],[13,"PreBndChg","","",25,null],[13,"PreCoeChg","","",25,null],[13,"SpxIsPert","","",25,null],[13,"MIPSolCnt","","",25,null],[13,"MIPCutCnt","","",25,null],[13,"MIPSolSolCnt","","",25,null],[13,"MIPNodeStatus","","",25,null],[13,"MIPNodeSolCnt","","",25,null],[13,"BarrierItrCnt","","",25,null],[4,"WhatDouble","","",null,null],[13,"Runtime","","",26,null],[13,"SpxItrCnt","","",26,null],[13,"SpxObjVal","","",26,null],[13,"SpxPrimInf","","",26,null],[13,"SpxDualInf","","",26,null],[13,"MIPObjBst","","",26,null],[13,"MIPObjBnd","","",26,null],[13,"MIPNodCnt","","",26,null],[13,"MIPNodLeft","","",26,null],[13,"MIPItrCnt","","",26,null],[13,"MIPSolObj","","",26,null],[13,"MIPSolObjBst","","",26,null],[13,"MIPSolObjBnd","","",26,null],[13,"MIPSolNodCnt","","",26,null],[13,"MIPNodeObjBst","","",26,null],[13,"MIPNodeObjBnd","","",26,null],[13,"MIPNodeNodCnt","","",26,null],[13,"BarrierPrimObj","","",26,null],[13,"BarrierDualObj","","",26,null],[13,"BarrierPrimInf","","",26,null],[13,"BarrierDualInf","","",26,null],[13,"BarrierCompl","","",26,null],[4,"WhatDoubleArray","","",null,null],[13,"MIPSolSol","","",27,null],[13,"MIPNodeRel","","",27,null],[4,"WhatString","","",null,null],[13,"MsgString","","",28,null],[8,"What","","",null,null],[16,"Output","","",29,null],[16,"Buf","","",29,null],[10,"init","","",29,{"inputs":[],"output":{"name":"buf"}}],[10,"to_out","","",29,{"inputs":[{"name":"buf"}],"output":{"name":"output"}}],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"from","","",24,{"inputs":[{"name":"i32"}],"output":{"name":"where"}}],[11,"into","","",24,null],[11,"into","","",25,null],[11,"into","","",26,null],[11,"into","","",27,null],[11,"into","","",28,null],[11,"init","","",25,{"inputs":[],"output":{"name":"c_int"}}],[11,"to_out","","",25,{"inputs":[{"name":"c_int"}],"output":{"name":"i32"}}],[11,"init","","",26,{"inputs":[],"output":{"name":"c_double"}}],[11,"to_out","","",26,{"inputs":[{"name":"c_double"}],"output":{"name":"f64"}}],[11,"init","","",28,{"inputs":[],"output":{"name":"c_str"}}],[11,"to_out","","",28,{"inputs":[{"name":"c_str"}],"output":{"name":"string"}}],[6,"Result","gurobi","A specialized\n[`Result`](https://doc.rust-lang.org/std/result/enum.Result.html)\ntype for operations in Gurobi Rust API",null,null],[6,"Callback","","",null,null],[17,"INFINITY","","Large number used in C API",null,null],[8,"Proxy","","Provides methods to query/modify attributes associated with certain element.",null,null],[11,"get","","Query the value of attribute.",30,null],[11,"set","","Set the value of attribute.",30,null],[11,"clone","gurobi::callback","",24,null],[11,"fmt","","",24,null],[11,"from","","",24,{"inputs":[{"name":"i32"}],"output":{"name":"where"}}],[11,"into","","",24,null],[11,"into","","",25,null],[11,"into","","",26,null],[11,"into","","",27,null],[11,"into","","",28,null],[11,"init","","",25,{"inputs":[],"output":{"name":"c_int"}}],[11,"to_out","","",25,{"inputs":[{"name":"c_int"}],"output":{"name":"i32"}}],[11,"init","","",26,{"inputs":[],"output":{"name":"c_double"}}],[11,"to_out","","",26,{"inputs":[{"name":"c_double"}],"output":{"name":"f64"}}],[11,"init","","",28,{"inputs":[],"output":{"name":"c_str"}}],[11,"to_out","","",28,{"inputs":[{"name":"c_str"}],"output":{"name":"string"}}],[11,"get","gurobi","Query the value of attribute.",30,null],[11,"set","","Set the value of attribute.",30,null]],"paths":[[4,"Error"],[4,"VarType"],[4,"ConstrSense"],[4,"ModelSense"],[4,"SOSType"],[4,"Status"],[4,"RelaxType"],[4,"IntParam"],[4,"DoubleParam"],[4,"StringParam"],[4,"IntAttr"],[4,"CharAttr"],[4,"DoubleAttr"],[4,"StringAttr"],[3,"CString"],[3,"Env"],[3,"Var"],[3,"Constr"],[3,"QConstr"],[3,"SOS"],[3,"LinExpr"],[3,"QuadExpr"],[3,"Context"],[3,"Model"],[4,"Where"],[4,"WhatInt"],[4,"WhatDouble"],[4,"WhatDoubleArray"],[4,"WhatString"],[8,"What"],[8,"Proxy"]]};
initSearch(searchIndex);
