var searchIndex = {};
searchIndex["gurobi"] = {"doc":"This crate provides primitive Rust APIs for Gurobi Optimizer.","items":[[3,"Env","gurobi","Gurobi environment object",null,null],[3,"Model","","Gurobi model object associated with certain environment.",null,null],[3,"Var","","Proxy object of a variables",null,null],[3,"Constr","","Proxy object of a linear constraint",null,null],[3,"QConstr","","Proxy object of a quadratic constraint",null,null],[3,"SOS","","Proxy object of a Special Order Set (SOS) constraint",null,null],[3,"Proxy","","Provides methods to query/modify attributes associated with certain element.",null,null],[3,"Callback","","The context object for Gurobi callback.",null,null],[3,"LinExpr","","Linear expression of variables",null,null],[3,"QuadExpr","","Quadratic expression of variables",null,null],[4,"Error","","The error type for operations in Gurobi Rust API",null,null],[13,"FromAPI","","An exception returned from Gurobi C API",0,null],[13,"NulError","","See https://doc.rust-lang.org/std/ffi/struct.NulError.html",0,null],[13,"InconsitentDims","","Inconsistent argument dimensions",0,null],[4,"VarType","","Type for new variable",null,null],[13,"Binary","","",1,null],[13,"Continuous","","",1,null],[13,"Integer","","",1,null],[4,"ConstrSense","","Sense for new linear/quadratic constraint",null,null],[13,"Equal","","",2,null],[13,"Greater","","",2,null],[13,"Less","","",2,null],[4,"ModelSense","","Sense of new objective function",null,null],[13,"Minimize","","",3,null],[13,"Maximize","","",3,null],[4,"SOSType","","Type of new SOS constraint",null,null],[13,"SOSType1","","",4,null],[13,"SOSType2","","",4,null],[4,"Status","","Status of a model",null,null],[13,"Loaded","","",5,null],[13,"Optimal","","",5,null],[13,"Infeasible","","",5,null],[13,"InfOrUnbd","","",5,null],[13,"Unbounded","","",5,null],[13,"CutOff","","",5,null],[13,"IterationLimit","","",5,null],[13,"NodeLimit","","",5,null],[13,"TimeLimit","","",5,null],[13,"SolutionLimit","","",5,null],[13,"Interrupted","","",5,null],[13,"Numeric","","",5,null],[13,"SubOptimal","","",5,null],[13,"InProgress","","",5,null],[4,"RelaxType","","Type of cost function at feasibility relaxation",null,null],[13,"Linear","","The weighted magnitude of bounds and constraint violations\n($penalty(s\\_i) = w\\_i s\\_i$)",6,null],[13,"Quadratic","","The weighted square of magnitude of bounds and constraint violations\n($penalty(s\\_i) = w\\_i s\\_i\\^2$)",6,null],[13,"Cardinality","","The weighted count of bounds and constraint violations\n($penalty(s\\_i) = w\\_i \\cdot [s\\_i &gt; 0]$)",6,null],[4,"Where","","Location where the callback called",null,null],[13,"Polling","","Periodic polling callback",7,null],[13,"PreSolve","","Currently performing presolve",7,null],[12,"coldel","gurobi::Where","The number of columns removed by presolve to this point.",7,null],[12,"rowdel","","The number of rows removed by presolve to this point.",7,null],[12,"senchg","","The number of constraint senses changed by presolve to this point.",7,null],[12,"bndchg","","The number of variable bounds changed by presolve to this point.",7,null],[12,"coecfg","","The number of coefficients changed by presolve to this point.",7,null],[13,"Simplex","gurobi","Currently in simplex",7,null],[12,"itrcnt","gurobi::Where","Current simplex iteration count.",7,null],[12,"objval","","Current simplex objective value.",7,null],[12,"priminf","","Current primal infeasibility.",7,null],[12,"dualinf","","Current dual infeasibility.",7,null],[12,"ispert","","Is problem current perturbed?",7,null],[13,"MIP","gurobi","Currently in MIP",7,null],[12,"objbst","gurobi::Where","Current best objective.",7,null],[12,"objbnd","","Current best objective bound.",7,null],[12,"nodcnt","","Current explored node count.",7,null],[12,"solcnt","","Current count of feasible solutions found.",7,null],[12,"cutcnt","","Current count of cutting planes applied.",7,null],[12,"nodleft","","Current unexplored node count.",7,null],[12,"itrcnt","","Current simplex iteration count.",7,null],[13,"MIPSol","gurobi","Found a new MIP incumbent",7,null],[12,"obj","gurobi::Where","Objective value for new solution.",7,null],[12,"objbst","","Current best objective.",7,null],[12,"objbnd","","Current best objective bound.",7,null],[12,"nodcnt","","Current explored node count.",7,null],[12,"solcnt","","Current count of feasible solutions found.",7,null],[13,"MIPNode","gurobi","Currently exploring a MIP node",7,null],[12,"status","gurobi::Where","Optimization status of current MIP node (see the Status Code section for further information).",7,null],[12,"objbst","","Current best objective.",7,null],[12,"objbnd","","Current best objective bound.",7,null],[12,"nodcnt","","Current explored node count.",7,null],[12,"solcnt","","Current count of feasible solutions found.",7,null],[13,"Message","gurobi","Printing a log message",7,null],[13,"Barrier","","Currently in barrier.",7,null],[12,"itrcnt","gurobi::Where","Current barrier iteration count.",7,null],[12,"primobj","","Primal objective value for current barrier iterate.",7,null],[12,"dualobj","","Dual objective value for current barrier iterate.",7,null],[12,"priminf","","Primal infeasibility for current barrier iterate.",7,null],[12,"dualinf","","Dual infeasibility for current barrier iterate.",7,null],[12,"compl","","Complementarity violation for current barrier iterate.",7,null],[5,"version","gurobi","Returns the version number of Gurobi",null,null],[11,"new","","Create an environment with log file",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_client","","Create a client environment on a computer server with log file",8,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"i32"},{"name":"f64"}],"output":{"name":"result"}}],[11,"new_model","","Create an empty Gurobi model from the environment",8,null],[11,"read_model","","Read a model from a file",8,null],[11,"get","","Query the value of a parameter",8,null],[11,"set","","Set the value of a parameter",8,null],[11,"read_params","","Import a set of parameter values from a file",8,null],[11,"write_params","","Write the set of parameter values to a file",8,null],[11,"message","","Insert a message into log file.",8,null],[11,"drop","","",8,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"into","","",7,null],[11,"get_where","","Retrieve the location where the callback called.",9,null],[11,"get_node_rel","","Retrive node relaxation solution values at the current node.",9,null],[11,"get_solution","","Retrieve values from the current solution vector.",9,null],[11,"set_solution","","Provide a new feasible solution for a MIP model.",9,null],[11,"get_runtime","","Retrieve the elapsed solver runtime [sec].",9,null],[11,"add_cut","","Add a new cutting plane to the MIP model.",9,null],[11,"add_lazy","","Add a new lazy constraint to the MIP model.",9,null],[11,"deref","","",9,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"into","","",10,null],[11,"new","","Create an empty linear expression.",10,{"inputs":[],"output":{"name":"self"}}],[11,"add_term","","Add a linear term into the expression.",10,null],[11,"add_constant","","Add a constant into the expression.",10,null],[11,"get_value","","Get actual value of the expression.",10,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"into","","",11,null],[11,"new","","",11,{"inputs":[],"output":{"name":"self"}}],[11,"add_term","","Add a linear term into the expression.",11,null],[11,"add_qterm","","Add a quadratic term into the expression.",11,null],[11,"add_constant","","Add a constant into the expression.",11,null],[11,"get_value","","Get actual value of the expression.",11,null],[11,"into","","",12,null],[11,"into","","",10,null],[11,"add","","",12,null],[11,"add","","",12,null],[11,"sub","","",12,null],[11,"sub","","",12,null],[11,"neg","","",12,null],[11,"mul","","",12,null],[11,"mul","","",12,null],[11,"mul","","",12,null],[11,"add","","",12,null],[11,"add","","",10,null],[11,"add","","",10,null],[11,"add","","",10,null],[11,"sub","","",10,null],[11,"add","","",10,null],[11,"sub","","",10,null],[11,"mul","","",11,null],[11,"add","","",11,null],[11,"sub","","",11,null],[11,"add","","",11,null],[11,"sub","","",11,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"into","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"into","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"into","","",3,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"into","","",4,null],[11,"eq","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"from","","",5,{"inputs":[{"name":"i32"}],"output":{"name":"status"}}],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"into","","",6,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"get","","Query the value of attribute.",13,null],[11,"set","","Set the value of attribute.",13,null],[11,"remove","","",13,null],[11,"eq","","",13,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"get_type","","",12,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"deref","","",12,null],[11,"deref_mut","","",12,null],[11,"eq","","",12,null],[11,"deref","","",14,null],[11,"deref_mut","","",14,null],[11,"eq","","",14,null],[11,"deref","","",15,null],[11,"deref_mut","","",15,null],[11,"eq","","",15,null],[11,"deref","","",16,null],[11,"deref_mut","","",16,null],[11,"eq","","",16,null],[11,"new","","Create an empty Gurobi model from the environment.",17,{"inputs":[{"name":"str"},{"name":"env"}],"output":{"name":"result"}}],[11,"read_from","","Read a model from a file",17,{"inputs":[{"name":"str"},{"name":"env"}],"output":{"name":"result"}}],[11,"copy","","create a copy of the model",17,null],[11,"fixed","","Create an fixed model associated with the model.",17,null],[11,"relax","","Create an relaxation of the model (undocumented).",17,null],[11,"presolve","","Perform presolve on the model.",17,null],[11,"feasibility","","Create a feasibility model (undocumented).",17,null],[11,"get_env","","Get immutable reference of an environment object associated with the model.",17,null],[11,"get_env_mut","","Get mutable reference of an environment object associated with the model.",17,null],[11,"update","","Apply all modification of the model to process",17,null],[11,"optimize","","Optimize the model synchronously",17,null],[11,"optimize_async","","Optimize the model asynchronously",17,null],[11,"optimize_with_callback","","Optimize the model with a callback function",17,null],[11,"sync","","Wait for a optimization called asynchronously.",17,null],[11,"compute_iis","","Compute an Irreducible Inconsistent Subsystem (IIS) of the model.",17,null],[11,"terminate","","Send a request to the model to terminate the current optimization process.",17,null],[11,"reset","","Reset the model to an unsolved state.",17,null],[11,"tune","","Perform an automated search for parameter settings that improve performance on the model.\nSee also references [on official\nmanual](https://www.gurobi.com/documentation/6.5/refman/parameter_tuning_tool.html#sec:Tuning).",17,null],[11,"get_tune_result","","Prepare to retrieve the results of `tune()`.\nSee also references [on official\nmanual](https://www.gurobi.com/documentation/6.5/refman/parameter_tuning_tool.html#sec:Tuning).",17,null],[11,"get_concurrent_env","","Create/retrieve a concurrent environment for the model",17,null],[11,"discard_concurrent_envs","","Discard all concurrent environments for the model.",17,null],[11,"message","","Insert a message into log file.",17,null],[11,"read","","Import optimization data of the model from a file.",17,null],[11,"write","","Export optimization data of the model to a file.",17,null],[11,"add_var","","add a decision variable to the model.",17,null],[11,"add_vars","","add decision variables to the model.",17,null],[11,"add_constr","","add a linear constraint to the model.",17,null],[11,"add_constrs","","add linear constraints to the model.",17,null],[11,"add_range","","Add a range constraint to the model.",17,null],[11,"add_ranges","","Add range constraints to the model.",17,null],[11,"add_qconstr","","add a quadratic constraint to the model.",17,null],[11,"add_sos","","add Special Order Set (SOS) constraint to the model.",17,null],[11,"set_objective","","Set the objective function of the model.",17,null],[11,"get","","Query the value of attributes which associated with variable/constraints.",17,null],[11,"set","","Set the value of attributes which associated with variable/constraints.",17,null],[11,"get_values","","Query the value of attributes which associated with variable/constraints.",17,null],[11,"set_values","","Set the value of attributes which associated with variable/constraints.",17,null],[11,"feas_relax","","Modify the model to create a feasibility relaxation.",17,null],[11,"set_pwl_obj","","Set a piecewise-linear objective function of a certain variable in the model.",17,null],[11,"status","","Retrieve the status of the model.",17,null],[11,"get_vars","","Retrieve an iterator of the variables in the model.",17,null],[11,"get_constrs","","Retrieve an iterator of the linear constraints in the model.",17,null],[11,"get_qconstrs","","Retrieve an iterator of the quadratic constraints in the model.",17,null],[11,"get_sos","","Retrieve an iterator of the special order set (SOS) constraints in the model.",17,null],[11,"remove","","Remove a variable from the model.",17,null],[11,"get_coeff","","Retrieve a single constant matrix coefficient of the model.",17,null],[11,"set_coeff","","Change a single constant matrix coefficient of the model.",17,null],[11,"set_coeffs","","Change a set of constant matrix coefficients of the model.",17,null],[11,"drop","","",17,null],[0,"attr","","Defines the name of attributes",null,null],[4,"IntAttr","gurobi::attr","",null,null],[13,"NumConstrs","","",18,null],[13,"NumVars","","",18,null],[13,"NumSOS","","",18,null],[13,"NumQConstrs","","",18,null],[13,"NumNZs","","",18,null],[13,"NumQNZs","","",18,null],[13,"NumQCNZs","","",18,null],[13,"NumIntVars","","",18,null],[13,"NumBinVars","","",18,null],[13,"NumPWLObjVars","","",18,null],[13,"ModelSense","","",18,null],[13,"IsMIP","","",18,null],[13,"IsQP","","",18,null],[13,"IsQCP","","",18,null],[13,"Status","","",18,null],[13,"SolCount","","",18,null],[13,"BarIterCount","","",18,null],[13,"VBasis","","",18,null],[13,"CBasis","","",18,null],[13,"PWLObjCvx","","",18,null],[13,"BranchPriority","","",18,null],[13,"VarPreStat","","",18,null],[13,"BoundVioIndex","","",18,null],[13,"BoundSVioIndex","","",18,null],[13,"ConstrVioIndex","","",18,null],[13,"ConstrSVioIndex","","",18,null],[13,"ConstrResidualIndex","","",18,null],[13,"ConstrSResidualIndex","","",18,null],[13,"DualVioIndex","","",18,null],[13,"DualSVioIndex","","",18,null],[13,"DualResidualIndex","","",18,null],[13,"DualSResidualIndex","","",18,null],[13,"ComplVioIndex","","",18,null],[13,"IntVioIndex","","",18,null],[13,"IISMinimal","","",18,null],[13,"IISLB","","",18,null],[13,"IISUB","","",18,null],[13,"IISConstr","","",18,null],[13,"IISSOS","","",18,null],[13,"IISQConstr","","",18,null],[13,"TuneResultCount","","",18,null],[13,"Lazy","","",18,null],[13,"VarHintPri","","",18,null],[4,"DoubleAttr","","",null,null],[13,"Runtime","","",19,null],[13,"ObjCon","","",19,null],[13,"LB","","",19,null],[13,"UB","","",19,null],[13,"Obj","","",19,null],[13,"Start","","",19,null],[13,"PreFixVal","","",19,null],[13,"RHS","","",19,null],[13,"QCRHS","","",19,null],[13,"MaxCoeff","","",19,null],[13,"MinCoeff","","",19,null],[13,"MaxBound","","",19,null],[13,"MinBound","","",19,null],[13,"MaxObjCoeff","","",19,null],[13,"MinObjCoeff","","",19,null],[13,"MaxRHS","","",19,null],[13,"MinRHS","","",19,null],[13,"ObjVal","","",19,null],[13,"ObjBound","","",19,null],[13,"ObjBoundC","","",19,null],[13,"MIPGap","","",19,null],[13,"IterCount","","",19,null],[13,"NodeCount","","",19,null],[13,"X","","",19,null],[13,"RC","","",19,null],[13,"Pi","","",19,null],[13,"QCPi","","",19,null],[13,"Slack","","",19,null],[13,"QCSlack","","",19,null],[13,"BoundVio","","",19,null],[13,"BoundSVio","","",19,null],[13,"BoundVioSum","","",19,null],[13,"BoundSVioSum","","",19,null],[13,"ConstrVio","","",19,null],[13,"ConstrSVio","","",19,null],[13,"ConstrVioSum","","",19,null],[13,"ConstrSVioSum","","",19,null],[13,"ConstrResidual","","",19,null],[13,"ConstrSResidual","","",19,null],[13,"ConstrResidualSum","","",19,null],[13,"ConstrSResidualSum","","",19,null],[13,"DualVio","","",19,null],[13,"DualSVio","","",19,null],[13,"DualVioSum","","",19,null],[13,"DualSVioSum","","",19,null],[13,"DualResidual","","",19,null],[13,"DualSResidual","","",19,null],[13,"DualResidualSum","","",19,null],[13,"DualSResidualSum","","",19,null],[13,"ComplVio","","",19,null],[13,"ComplVioSum","","",19,null],[13,"IntVio","","",19,null],[13,"IntVioSum","","",19,null],[13,"Kappa","","",19,null],[13,"KappaExact","","",19,null],[13,"SAObjLow","","",19,null],[13,"SAObjUp","","",19,null],[13,"SALBLow","","",19,null],[13,"SALBUp","","",19,null],[13,"SARHSLow","","",19,null],[13,"SAUBLow","","",19,null],[13,"SAUBUp","","",19,null],[13,"SARHSUp","","",19,null],[13,"Xn","","",19,null],[13,"FarkasProof","","",19,null],[13,"FarkasDual","","",19,null],[13,"UnbdRay","","",19,null],[13,"PStart","","",19,null],[13,"DStart","","",19,null],[13,"BarX","","",19,null],[13,"VarHintVal","","",19,null],[4,"CharAttr","","",null,null],[13,"VType","","",20,null],[13,"Sense","","",20,null],[13,"QCSense","","",20,null],[4,"StringAttr","","",null,null],[13,"ModelName","","",21,null],[13,"VarName","","",21,null],[13,"ConstrName","","",21,null],[13,"QCName","","",21,null],[0,"param","gurobi","Defines the name of parameters",null,null],[4,"IntParam","gurobi::param","",null,null],[13,"SolutionLimit","","",22,null],[13,"Method","","",22,null],[13,"ScaleFlag","","",22,null],[13,"SimplexPricing","","",22,null],[13,"Quad","","",22,null],[13,"NormAdjust","","",22,null],[13,"Sifting","","",22,null],[13,"SiftMethod","","",22,null],[13,"SubMIPNodes","","",22,null],[13,"VarBranch","","",22,null],[13,"Cuts","","",22,null],[13,"CliqueCuts","","",22,null],[13,"CoverCuts","","",22,null],[13,"FlowCoverCuts","","",22,null],[13,"FlowPathCuts","","",22,null],[13,"GUBCoverCuts","","",22,null],[13,"ImpliedCuts","","",22,null],[13,"MIPSepCuts","","",22,null],[13,"MIRCuts","","",22,null],[13,"ModKCuts","","",22,null],[13,"ZeroHalfCuts","","",22,null],[13,"NetworkCuts","","",22,null],[13,"SubMIPCuts","","",22,null],[13,"CutAggPasses","","",22,null],[13,"CutPasses","","",22,null],[13,"GomoryPasses","","",22,null],[13,"NodeMethod","","",22,null],[13,"Presolve","","",22,null],[13,"Aggregate","","",22,null],[13,"IISMethod","","",22,null],[13,"PreCrush","","",22,null],[13,"PreDepRow","","",22,null],[13,"PrePasses","","",22,null],[13,"DisplayInterval","","",22,null],[13,"OutputFlag","","",22,null],[13,"Threads","","",22,null],[13,"BarIterLimit","","",22,null],[13,"Crossover","","",22,null],[13,"CrossoverBasis","","",22,null],[13,"BarCorrectors","","",22,null],[13,"BarOrder","","",22,null],[13,"PumpPasses","","",22,null],[13,"RINS","","",22,null],[13,"Symmetry","","",22,null],[13,"MIPFocus","","",22,null],[13,"NumericFocus","","",22,null],[13,"AggFill","","",22,null],[13,"PreDual","","",22,null],[13,"SolutionNumber","","",22,null],[13,"MinRelNodes","","",22,null],[13,"ZeroObjNodes","","",22,null],[13,"BranchDir","","",22,null],[13,"InfUnbdInfo","","",22,null],[13,"DualReductions","","",22,null],[13,"BarHomogeneous","","",22,null],[13,"PreQLinearize","","",22,null],[13,"MIQCPMethod","","",22,null],[13,"QCPDual","","",22,null],[13,"LogToConsole","","",22,null],[13,"PreSparsify","","",22,null],[13,"PreMIQCPForm","","",22,null],[13,"Seed","","",22,null],[13,"ConcurrentMIP","","",22,null],[13,"ConcurrentJobs","","",22,null],[13,"DistributedMIPJobs","","",22,null],[13,"LazyConstraints","","",22,null],[13,"TuneResults","","",22,null],[13,"TuneTrials","","",22,null],[13,"TuneOutput","","",22,null],[13,"TuneJobs","","",22,null],[13,"Disconnected","","",22,null],[13,"NoRelHeuristic","","",22,null],[13,"UpdateMode","","",22,null],[13,"WorkerPort","","",22,null],[13,"Record","","",22,null],[4,"DoubleParam","","",null,null],[13,"Cutoff","","",23,null],[13,"IterationLimit","","",23,null],[13,"NodeLimit","","",23,null],[13,"TimeLimit","","",23,null],[13,"FeasibilityTol","","",23,null],[13,"IntFeasTol","","",23,null],[13,"MarkowitzTol","","",23,null],[13,"MIPGap","","",23,null],[13,"MIPGapAbs","","",23,null],[13,"OptimalityTol","","",23,null],[13,"PerturbValue","","",23,null],[13,"Heuristics","","",23,null],[13,"ObjScale","","",23,null],[13,"NodefileStart","","",23,null],[13,"BarConvTol","","",23,null],[13,"BarQCPConvTol","","",23,null],[13,"PSDTol","","",23,null],[13,"ImproveStartGap","","",23,null],[13,"ImproveStartNodes","","",23,null],[13,"ImproveStartTime","","",23,null],[13,"FeasRelaxBigM","","",23,null],[13,"TuneTimeLimit","","",23,null],[13,"PreSOS1BigM","","",23,null],[13,"PreSOS2BigM","","",23,null],[4,"StringParam","","",null,null],[13,"LogFile","","",24,null],[13,"NodefileDir","","",24,null],[13,"ResultFile","","",24,null],[13,"WorkerPool","","",24,null],[13,"WorkerPassword","","",24,null],[13,"Dummy","","",24,null],[6,"Result","gurobi","A specialized\n[`Result`](https://doc.rust-lang.org/std/result/enum.Result.html)\ntype for operations in Gurobi Rust API",null,null],[17,"INFINITY","","Large number used in C API",null,null],[11,"clone","gurobi::param","",22,null],[11,"fmt","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"clone","gurobi::attr","",18,null],[11,"fmt","","",18,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",21,null],[11,"fmt","","",21,null]],"paths":[[4,"Error"],[4,"VarType"],[4,"ConstrSense"],[4,"ModelSense"],[4,"SOSType"],[4,"Status"],[4,"RelaxType"],[4,"Where"],[3,"Env"],[3,"Callback"],[3,"LinExpr"],[3,"QuadExpr"],[3,"Var"],[3,"Proxy"],[3,"Constr"],[3,"QConstr"],[3,"SOS"],[3,"Model"],[4,"IntAttr"],[4,"DoubleAttr"],[4,"CharAttr"],[4,"StringAttr"],[4,"IntParam"],[4,"DoubleParam"],[4,"StringParam"]]};
initSearch(searchIndex);
